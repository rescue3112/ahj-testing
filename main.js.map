{"version":3,"file":"main.js","mappings":"mBACe,MAAMA,EACnBC,YAAYC,GACVC,KAAKD,QAAUA,CAChB,CAEDE,aACE,IAAIC,EAAcF,KAAKD,QAAQI,MAAM,EAAG,GAKxC,OAJuB,MAAnBD,EAAY,IAAiC,MAAnBA,EAAY,IAAiC,MAAnBA,EAAY,KAElEA,EAAcA,EAAY,IAEpBA,GACN,IAAK,IACH,MAAO,OACT,IAAK,IACH,MAAO,MACT,IAAK,IACH,MAAO,SACT,IAAK,KACH,MAAO,WACT,IAAK,KACH,MAAO,aACT,IAAK,KACH,MAAO,MACT,IAAK,KAEL,IAAK,KACH,MAAO,OACT,QACE,MAAO,gCAEZ,EC5BY,MAAME,EACnBN,YAAYO,GACVL,KAAKK,SAAWA,EAEhBL,KAAKM,SAAWN,KAAKM,SAASC,KAAKP,MACnCA,KAAKQ,aAAeR,KAAKQ,aAAaD,KAAKP,KAC5C,CAEUS,oBACT,MAAQ,6iCAkBT,CAEUC,sBACT,MAAO,cACR,CAEUC,2BACT,MAAO,eACR,CAEUC,4BACT,MAAO,MACR,CAEUC,2BACT,MAAO,OACR,CAEDC,YACEd,KAAKK,SAASU,UAAYX,EAAkBK,OAE5CT,KAAKgB,QAAUhB,KAAKK,SAASY,cAAcb,EAAkBM,UAC7DV,KAAKkB,MAAQlB,KAAKK,SAASY,cAAcb,EAAkBO,eAC3DX,KAAKmB,OAASnB,KAAKK,SAASY,cAAcb,EAAkBQ,gBAC5DZ,KAAKoB,MAAQC,MAAMC,KAAKtB,KAAKK,SAASkB,iBAAiBnB,EAAkBS,gBAEzEb,KAAKgB,QAAQQ,iBAAiB,SAAUxB,KAAKM,UAC7CN,KAAKgB,QAAQQ,iBAAiB,QAASxB,KAAKQ,aAC7C,CAEDF,SAASmB,GACPA,EAAEC,iBAEF,MAAM,MAAEC,GAAU3B,KAAKkB,OC/DZ,SAAmBU,GAChC,MAAMC,EAAYC,OAAOF,GAGzB,IAAIG,EAAO,EACPC,GAAW,EACf,IAAK,IAAIC,EAJOJ,EAAUK,OAIH,EAAGD,GAAK,EAAGA,GAAK,EAAG,CACxC,IAAIE,EAAIN,EAAUI,GAAGG,aAAe,IAAIA,cAEvB,IAAbJ,IAAmBG,GAAK,GAE5BJ,GAAQM,SAASF,EAAI,GAAI,IACzBJ,GAAQI,EAAI,GAEZH,GAAYA,CACb,CAED,OAAQD,EAAO,IAAO,CACvB,CD+COO,CAAUX,IAIZ3B,KAAKkB,MAAMqB,UAAUC,IAAI,WACzBxC,KAAKkB,MAAMqB,UAAUE,OAAO,WAJ5BzC,KAAKkB,MAAMqB,UAAUC,IAAI,SACzBxC,KAAKkB,MAAMqB,UAAUE,OAAO,WAK/B,CAEDjC,aAAaiB,GAEX,IAAIiB,EACAzC,EAFJwB,EAAEC,iBAGE1B,KAAKkB,MAAMS,MAAMO,OAAS,IAC5BlC,KAAKoB,MAAMuB,SAASC,GAASA,EAAKL,UAAUC,IAAI,iBAChDE,EAAO,IAAI7C,EAAeG,KAAKkB,MAAMS,OAAO1B,aAC5CA,EAAaD,KAAKoB,MAAMyB,MAAMD,GAASA,EAAKL,UAAUO,SAASJ,KAC/DzC,EAAWsC,UAAUE,OAAO,gBAE1BzC,KAAKkB,MAAMS,MAAMO,OAAS,GAC5BlC,KAAKoB,MAAMuB,SAASC,GAASA,EAAKL,UAAUE,OAAO,gBAEtD,EEzEH,MAAMM,EAAYC,SAAS/B,cAAc,cAC5B,IAAIb,EAAkB2C,GAE9BjC,W","sources":["webpack://ahj-testing/./src/js/cardDefinition.js","webpack://ahj-testing/./src/js/widget.js","webpack://ahj-testing/./src/js/validator.js","webpack://ahj-testing/./src/js/app.js"],"sourcesContent":["/* eslint-disable linebreak-style */\nexport default class CardDefinition {\n  constructor(inputNo) {\n    this.inputNo = inputNo;\n  }\n\n  definition() {\n    let firstNumber = this.inputNo.slice(0, 2);\n    if (firstNumber[0] === '4' || firstNumber[0] === '2' || firstNumber[0] === '5') {\n      /* eslint-disable prefer-destructuring */\n      firstNumber = firstNumber[0];\n    }\n    switch (firstNumber) {\n      case '4':\n        return 'visa';\n      case '2':\n        return 'mir';\n      case '5':\n        return 'master';\n      case '60':\n        return 'discover';\n      case '30':\n        return 'diner_club';\n      case '35':\n        return 'jcb';\n      case '37':\n        return 'amex';\n      case '34':\n        return 'amex';\n      default:\n        return 'the card is not in the system';\n    }\n  }\n}\n","/* eslint-disable linebreak-style */\nimport checkLuhn from './validator';\nimport CardDefinition from './cardDefinition';\n\nexport default class CardFormValidator {\n  constructor(parentEl) {\n    this.parentEl = parentEl;\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDefinition = this.onDefinition.bind(this);\n  }\n\n  static get markup() {\n    return `\n            <h3>Check your credit card number</h3>\n            <ul class=\"cards list-unstyled\">\n              <li><span class=\"card visa\" title=\"Visa\">Visa</span></li>\n              <li><span class=\"card master\" title=\"Mastercard\">Mastercard</span></li>\n              <li><span class=\"card amex\" title=\"American Express\">American Express</span></li>\n              <li><span class=\"card discover\" title=\"Discover\">Discover</span></li>\n              <li><span class=\"card jcb\" title=\"JCB\">JCB</span></li>\n              <li><span class=\"card diners_club\" title=\"Diners Club\">Diners Club</span></li>\n              <li><span class=\"card mir\" title=\"Mir\">Mir</span></li>\n            </ul>\n            <form id=\"form\" class=\"form-inline\">\n                <div class=\"form-group\">\n                    <input class=\"form-control\" id=\"card_number\" name=\"card_number\" type=\"text\" placeholder=\"Credit card number\">\n                    <button id=\"submitform\" class=\"btn btn-success\">Click to Validate</button>\n                </div>\n            </form>\n        `;\n  }\n\n  static get selector() {\n    return '.form-inline';\n  }\n\n  static get inputSelector() {\n    return '.form-control';\n  }\n\n  static get submitSelector() {\n    return '.btn';\n  }\n\n  static get cardtSelector() {\n    return '.card';\n  }\n\n  bindToDom() {\n    this.parentEl.innerHTML = CardFormValidator.markup;\n\n    this.element = this.parentEl.querySelector(CardFormValidator.selector);\n    this.input = this.parentEl.querySelector(CardFormValidator.inputSelector);\n    this.submit = this.parentEl.querySelector(CardFormValidator.submitSelector);\n    this.cards = Array.from(this.parentEl.querySelectorAll(CardFormValidator.cardtSelector));\n\n    this.element.addEventListener('submit', this.onSubmit);\n    this.element.addEventListener('input', this.onDefinition);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const { value } = this.input;\n\n    if (checkLuhn(value)) {\n      this.input.classList.add('valid');\n      this.input.classList.remove('invalid');\n    } else {\n      this.input.classList.add('invalid');\n      this.input.classList.remove('valid');\n    }\n  }\n\n  onDefinition(e) {\n    e.preventDefault();\n    let card;\n    let definition;\n    if (this.input.value.length > 1) {\n      this.cards.forEach((item) => item.classList.add('invalidCard'));\n      card = new CardDefinition(this.input.value).definition();\n      definition = this.cards.find((item) => item.classList.contains(card));\n      definition.classList.remove('invalidCard');\n    }\n    if (this.input.value.length < 1) {\n      this.cards.forEach((item) => item.classList.remove('invalidCard'));\n    }\n  }\n}\n","/* eslint-disable linebreak-style */\nexport default function checkLuhn(cardNo) {\n  const cardNoStr = String(cardNo);\n  const nDigits = cardNoStr.length;\n\n  let nSum = 0;\n  let isSecond = false;\n  for (let i = nDigits - 1; i >= 0; i -= 1) {\n    let d = cardNoStr[i].charCodeAt() - '0'.charCodeAt();\n\n    if (isSecond === true) d *= 2;\n\n    nSum += parseInt(d / 10, 10);\n    nSum += d % 10;\n\n    isSecond = !isSecond;\n  }\n\n  return (nSum % 10 === 0);\n}\n","/* eslint-disable linebreak-style */\n// TODO: write code here\n\n// // comment this to pass build\n// // const unusedVariable = 'variable';\n\n// // for demonstration purpose only\n// export default function demo(value) {\n//   return value;\n// }\n\n// console.log('app.js included');\n\nimport CardFormValidator from './widget';\n\nconst container = document.querySelector('.container');\nconst form = new CardFormValidator(container);\n\nform.bindToDom();\n"],"names":["CardDefinition","constructor","inputNo","this","definition","firstNumber","slice","CardFormValidator","parentEl","onSubmit","bind","onDefinition","markup","selector","inputSelector","submitSelector","cardtSelector","bindToDom","innerHTML","element","querySelector","input","submit","cards","Array","from","querySelectorAll","addEventListener","e","preventDefault","value","cardNo","cardNoStr","String","nSum","isSecond","i","length","d","charCodeAt","parseInt","checkLuhn","classList","add","remove","card","forEach","item","find","contains","container","document"],"sourceRoot":""}